@page "/EditPassenger/{passengerId}"
@inject PassengerService _passengerService;
@inject NavigationManager _navigationManager;

<h3>Edit information for passenger @fullName</h3>

@if (Passenger == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@Passenger"  OnValidSubmit="@UpdatePassengerAsync">
        <PassengerFields Passenger="@Passenger"></PassengerFields>
        <button type="submit" class="btn btn-success">
            <span class="oi oi-pencil"></span>
            Update Passenger
        </button>
        <button type="button" class="btn btn-secondary" @onclick="Close">
            <span class="oi oi-media-skip-backward"></span>
            Close
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public string passengerId{ get; set; }

    public string fullName { get; set; }
    public Passenger Passenger{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        Passenger = await _passengerService.GetPassengerAsync(int.Parse(passengerId));
        fullName = Passenger.Name +" "+ Passenger.Surname;
    }
    private void Close()
    {
        _navigationManager.NavigateTo("/PassengersPage");
    }

    private async Task UpdatePassengerAsync()
    {
        await _passengerService.UpdatePassengerAsync(Passenger);
        Close();
    }
}
